from asyncio.windows_events import NULL
import aiohttp
import asyncio

class Topgg:
    def __init__(self, token):
        self.token = token
    
    async def checkVote(self, clientid, userid):
        async with aiohttp.ClientSession(headers={"Authorization":self.token}) as session:
            async with session.get(f'https://top.gg/api/bots/{clientid}/check?userId={userid}') as response:
                if response.status == 200:
                    r = await response.json()
                    if r["voted"] == 1:
                        self.voted = True
                    else:
                        self.voted = False
                    
                    return self
                else:
                    raise Exception(await response.text())

    
    async def getInfo(self, botid):
        async with aiohttp.ClientSession(headers={"Authorization":self.token}) as session:
            async with session.get(f'https://top.gg/api/bots/{botid}/') as response:
                if await response.status == 200:
                    r = await response.json()

                    if r["defAvatar"] or not r["defAvatar"] == "":
                        self.defAvatar = r["defAvatar"]
                    else:
                        self.defAvatar = None

                    if r["invite"] or not r["invite"] == "":
                        self.invite = r["invite"]
                    else:
                        self.invite = None

                    if r["website"] or not r["website"] == "":
                        self.website = r["website"]
                    else:
                        self.website = None

                    if r["support"] or not r["support"] == "":
                        self.support = r["support"]
                    else:
                        self.support = None

                    if r["github"] or not r["github"] == "":
                        self.github = r["github"]
                    else:
                        self.github = None
                    
                    if r["longdesc"] or not r["longdesc"] == "":
                        self.longdesc = r["longdesc"]
                    else:
                        self.longdesc = None

                    if r["shortdesc"] or not r["shortdesc"] == "":
                        self.shortdesc = r["shortdesc"]
                    else:
                        self.shortdesc = None

                    if r["prefix"] or not r["prefix"] == "":
                        self.prefix = r["prefix"]
                    else:
                        self.prefix = None

                    if r["lib"] or not r["lib"] == "":
                        self.lib = r["lib"]
                    else:
                        self.lib = None

                    if r["clientid"] or not r["clientid"] == "":
                        self.clientid = r["clientid"]
                    else:
                        self.clientid = None

                    if r["avatar"] or not r["avatar"] == "":
                        self.avatar = r["avatar"]
                    else:
                        self.avatar = None

                    if r["id"] or not r["id"] == "":
                        self.id = r["id"]
                    else:
                        self.id = None

                    if r["discriminator"] or not r["discriminator"] == "":
                        self.discriminator = r["discriminator"]
                    else:
                        self.discriminator = None

                    if r["username"] or not r["username"] == "":
                        self.username = r["username"]
                    else:
                        self.username = None

                    if r["date"] or not r["date"] == "":
                        self.date = r["date"]
                    else:
                        self.date = None

                    if r["server_count"] or not r["server_count"] == "":
                        self.server_count = r["server_count"]
                    else:
                        self.server_count = None

                    if r["shard_count"] or not r["shard_count"] == "":
                        self.shard_count = r["shard_count"]
                    else:
                        self.shard_count = None

                    if r["monthlyPoints"] or not r["monthlyPoints"] == "":
                        self.monthlyPoints = r["monthlyPoints"]
                    else:
                        self.monthlyPoints = None

                    if r["points"] or not r["points"] == "":
                        self.points = r["points"]
                    else:
                        self.points = None

                    if r["certifiedBot"] or not r["certifiedBot"] == "":
                        self.certifiedBot = r["certifiedBot"]
                    else:
                        self.certifiedBot = None

                    if r["owners"] or not r["owners"] == "":
                        self.owners = r["owners"]
                    else:
                        self.owners = None

                    if r["tags"] or not r["tags"] == "":
                        self.tags = r["tags"]
                    else:
                        self.tags = None
                    
                    return self
                else:
                    raise Exception(await response.text())